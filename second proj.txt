System.out.print("");
				Scanner KB = new Scanner(System.in);
				int nbG  = KB.nextInt();
				//boolean [][] dates = new boolean[nbG][30];

				boolean [] Sdates = new boolean[30];
				for(int i =0;i<30;i++) {
					Sdates[i] = true;
				}
				int day1;
				int day2;
				for(int i =0;i<nbG;i++) {
					day1 = KB.nextInt();
					day2 = KB.nextInt();
					for(int j=0;j<30;j++) {
						if(j < day1 || j >= day2)
							Sdates[j] = false;
					}
				}
				int nbH = KB.nextInt();
				int [][] Prices = new int[nbH][30];
				
				for(int i=0;i<nbH;i++) {
					for(int j=0;j<30;j++) {
						Prices[i][j] = KB.nextInt();
					}
				}
				
				day2 = day1=-1;
				for(int i=0;i<30;i++) {
					if(day1 ==-1 && Sdates[i] == true)
						day1 = i;
					if(Sdates[i] == true && i>= day2)
						day2 =i;
				}
				
				if(day1 != day2) {
					int minPrice = 1000000;
					int totalP;
					for(int i=0;i<nbH;i++) {
						totalP = 0;
						for(int j=day1-1;j<=day2-1;j++) {
							totalP +=Prices[i][j];
						}
						if(totalP < minPrice)
							minPrice = totalP;
					}
					System.out.println(minPrice);
				}
				else {
					System.out.println("fail");
					System.out.println("0");
				}
=================================================================
https://www.hackerrank.com/contests/ksu-ccis-pc-2/challenges/a-simple-cypher

The output simply consists of the resulting message. For example, the output for the sample input above is as follows (note that in addition to the space between "D" and "E", there is an invisible space at the end of the output. These two spaces were added to fill the second block).

Sample Input 0

0
4
1
2
0
3
1
ABCDEF
Sample Output 0

CABD EF 